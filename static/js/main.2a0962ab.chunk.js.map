{"version":3,"sources":["App.js","index.js"],"names":["getDegreesinCandF","kelvin","centigrade","Math","round","fahrenheit","App","props","getWeatherData","then","data","setState","sunrise","sys","sunset","humidity","main","pressure","visibility","wind","min_temp","temp_min","max_temp","temp_max","temp","feelsLike","feels_like","cityName","name","country","clouds","weather","description","cloudsImage","icon","temperature","city","url","process","fetch","mode","response","json","console","log","info","this","getInfo","extraInfo","getExtraInfo","state","Object","keys","length","constructor","className","type","onKeyPress","event","key","searchWeatherData","target","value","id","src","alt","React","Component","ReactDOM","render","document","querySelector"],"mappings":"iMAEA,SAASA,EAAkBC,GACnB,MAAO,CACHC,WAAYC,KAAKC,MAAMH,EAAS,QAChCI,WAAYF,KAAKC,MAA0B,GAAnBH,EAAS,QAAc,EAAI,K,IAsGhDK,E,kDAjGX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,eAAe,aAAaC,MAAK,SAAAC,GAClC,EAAKC,SAASD,MAHH,E,yDAMNA,GACT,MAAO,CACHE,QAASF,EAAKG,IAAID,QAClBE,OAAQJ,EAAKG,IAAIC,OACjBC,SAAUL,EAAKM,KAAKD,SACpBE,SAAUP,EAAKM,KAAKC,SACpBC,WAAYR,EAAKQ,WACjBC,KAAMT,EAAKS,KACXC,SAAWV,EAAKM,KAAKK,SACrBC,SAAUZ,EAAKM,KAAKO,Y,8BAGpBb,GACJ,IAAIc,EAAOd,EAAKM,KAAKQ,KACjBC,EAAYf,EAAKM,KAAKU,WAC1B,MAAO,CACHC,SAAUjB,EAAKkB,KACfC,QAASnB,EAAKG,IAAIgB,QAClBC,OAAQpB,EAAKqB,QAAQ,GAAGC,YACxBC,YAAavB,EAAKqB,QAAQ,GAAGG,KAC7BC,YAAanC,EAAkBwB,GAC/BC,UAAWzB,EAAkByB,M,8EAGhBW,G,2FAEPC,E,4DAA2DD,E,kBAAcE,oC,SACxDC,MAAMF,EAAK,CAACG,KAAM,S,cAAnCC,E,gBACcA,EAASC,O,cAAvBhC,E,OACNiC,QAAQC,IAAIlC,G,kBACL,CACHmC,KAAMC,KAAKC,QAAQrC,GACnBsC,UAAWF,KAAKG,aAAavC,K,kCAGjCoC,KAAKnC,SAAS,I,yJAGJyB,GAAO,IAAD,OACpBO,QAAQC,IAAIR,GACZU,KAAKtC,eAAe4B,GAAM3B,MAAK,SAAAC,GAC3B,EAAKC,SAASD,Q,+BAGZ,IAAD,OAEL,GADAiC,QAAQC,IAAIE,KAAKI,QACZJ,KAAKI,MACN,OAAO,wCAEX,GAAsC,IAAnCC,OAAOC,KAAKN,KAAKI,OAAOG,QAAgBP,KAAKI,MAAMI,cAAgBH,OAClE,OAAO,uDAEX,IAAMN,EAAOC,KAAKI,MAAML,KACxB,OACI,6BACI,yBAAKU,UAAU,cACX,2BAAOA,UAAU,aACVC,KAAK,OACLC,WACI,SAACC,GACmB,UAAbA,EAAMC,KACL,EAAKC,kBAAkBF,EAAMG,OAAOC,WAM3D,yBAAKC,GAAG,gBACJ,yBAAKA,GAAG,OACJ,yBAAKC,IAAG,2CAAsCnB,EAAKZ,YAA3C,WAAiEgC,IAAI,YAEjF,yBAAKF,GAAG,QACJ,yBAAKA,GAAG,QACHlB,EAAKlB,SADV,KACsBkB,EAAKhB,SAE3B,yBAAKkC,GAAG,UACHlB,EAAKf,QAEV,yBAAKiC,GAAG,QACHlB,EAAKV,YAAYjC,WADtB,QAGA,yBAAK6D,GAAG,SAAR,eACiBlB,EAAKpB,UAAUvB,WADhC,e,GAxFNgE,IAAMC,WCLxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,U","file":"static/js/main.2a0962ab.chunk.js","sourcesContent":["import React from 'react';\n\nfunction getDegreesinCandF(kelvin) {\n        return {\n            centigrade: Math.round(kelvin - 273.15),\n            fahrenheit: Math.round((kelvin - 273.15) * 9 / 5 + 32)\n        }\n}\n\nclass App extends React.Component{\n    constructor(props) {\n        super(props);\n        this.getWeatherData('Bengaluru').then(data => {\n            this.setState(data);\n        });\n    }\n    getExtraInfo(data) {\n        return {\n            sunrise: data.sys.sunrise,\n            sunset: data.sys.sunset,\n            humidity: data.main.humidity,\n            pressure: data.main.pressure,\n            visibility: data.visibility,\n            wind: data.wind,\n            min_temp : data.main.temp_min,\n            max_temp: data.main.temp_max\n        }\n    }\n    getInfo(data) {\n        let temp = data.main.temp;\n        let feelsLike = data.main.feels_like;\n        return {\n            cityName: data.name,\n            country: data.sys.country,\n            clouds: data.weather[0].description,\n            cloudsImage: data.weather[0].icon,\n            temperature: getDegreesinCandF(temp),\n            feelsLike: getDegreesinCandF(feelsLike),\n        };\n    }\n    async getWeatherData(city) {\n        try {\n            const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${process.env.REACT_APP_API_KEY}`;\n            const response = await fetch(url, {mode: 'cors'});\n            const data =  await response.json();\n            console.log(data);\n            return {\n                info: this.getInfo(data),\n                extraInfo: this.getExtraInfo(data)\n            }\n        } catch(error) {\n            this.setState({});\n        }\n    }\n    searchWeatherData(city) {\n        console.log(city);\n        this.getWeatherData(city).then(data => {\n            this.setState(data);\n        })\n    }\n    render() {\n        console.log(this.state)\n        if (!this.state) {\n            return <div>Loading</div>\n        }\n        if(Object.keys(this.state).length === 0 && this.state.constructor === Object) {\n            return <div>couldn't find the city</div>\n        }\n        const info = this.state.info;\n        return (\n            <div>\n                <div className=\"search-bar\">\n                    <input className=\"search-box\"\n                           type=\"text\"\n                           onKeyPress={\n                               (event) => {\n                                   if(event.key ===\"Enter\") {\n                                       this.searchWeatherData(event.target.value);\n                                   }\n                               }\n                           }\n                    />\n                </div>\n                <div id=\"weather-card\">\n                    <div id=\"sky\">\n                        <img src={`http://openweathermap.org/img/wn/${info.cloudsImage}@2x.png`} alt=\"clouds\"/>\n                    </div>\n                    <div id=\"info\">\n                        <div id=\"city\">\n                            {info.cityName}, {info.country}\n                        </div>\n                        <div id=\"clouds\">\n                            {info.clouds}\n                        </div>\n                        <div id=\"temp\">\n                            {info.temperature.centigrade}°\n                        </div>\n                        <div id=\"feels\">\n                            Feels like: {info.feelsLike.centigrade}°\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('main'));\n\n"],"sourceRoot":""}