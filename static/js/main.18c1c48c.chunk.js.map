{"version":3,"sources":["Components/Header.js","Components/Info.js","Components/WeatherCard.js","App.js","index.js"],"names":["Header","props","id","className","type","onKeyPress","event","key","searchWeatherData","target","value","Info","info","cityName","country","clouds","temperature","centigrade","feelsLike","WeatherCard","src","cloudsImage","alt","getDegreesinCandF","kelvin","Math","round","fahrenheit","getExtraInfo","data","sunrise","sys","sunset","humidity","main","pressure","visibility","wind","min_temp","temp_min","max_temp","temp_max","getInfo","temp","feels_like","name","weather","description","icon","App","getWeatherData","bind","this","then","setState","city","a","url","process","fetch","mode","response","json","console","log","extraInfo","state","Object","keys","length","constructor","Component","ReactDOM","render","document","getElementById"],"mappings":"4OAoBeA,MAlBf,SAAgBC,GACd,OACE,yBAAKC,GAAG,UACN,uCACA,2BAAOC,UAAU,aACVC,KAAK,OACLC,WACE,SAACC,GACmB,UAAdA,EAAMC,KACRN,EAAMO,kBAAkBF,EAAMG,OAAOC,YCUzCC,MAnBf,SAAcV,GACZ,OACE,yBAAKC,GAAG,QACN,yBAAKA,GAAG,QACLD,EAAMW,KAAKC,SADd,KAC0BZ,EAAMW,KAAKE,SAErC,yBAAKZ,GAAG,UACLD,EAAMW,KAAKG,QAEd,yBAAKb,GAAG,QACLD,EAAMW,KAAKI,YAAYC,WAD1B,QAGA,yBAAKf,GAAG,SAAR,eACeD,EAAMW,KAAKM,UAAUD,WADpC,UCASE,MAXf,SAAqBlB,GACnB,OACE,yBAAKC,GAAG,gBACN,yBAAKA,GAAG,OACN,yBAAKkB,IAAG,2CAAsCnB,EAAMW,KAAKS,YAAjD,WAAuEC,IAAI,YAErF,kBAAC,EAAD,CAAMV,KAAMX,EAAMW,SCLxB,SAASW,EAAkBC,GACzB,MAAO,CACLP,WAAYQ,KAAKC,MAAMF,EAAS,QAChCG,WAAYF,KAAKC,MAA0B,GAAnBF,EAAS,QAAc,EAAI,KAIvD,SAASI,EAAaC,GACpB,MAAO,CACLC,QAASD,EAAKE,IAAID,QAClBE,OAAQH,EAAKE,IAAIC,OACjBC,SAAUJ,EAAKK,KAAKD,SACpBE,SAAUN,EAAKK,KAAKC,SACpBC,WAAYP,EAAKO,WACjBC,KAAMR,EAAKQ,KACXC,SAAUT,EAAKK,KAAKK,SACpBC,SAAUX,EAAKK,KAAKO,UAIxB,SAASC,EAAQb,GACf,IAAIc,EAAOd,EAAKK,KAAKS,KACjBzB,EAAYW,EAAKK,KAAKU,WAC1B,MAAO,CACL/B,SAAUgB,EAAKgB,KACf/B,QAASe,EAAKE,IAAIjB,QAClBC,OAAQc,EAAKiB,QAAQ,GAAGC,YACxB1B,YAAaQ,EAAKiB,QAAQ,GAAGE,KAC7BhC,YAAaO,EAAkBoB,GAC/BzB,UAAWK,EAAkBL,I,IAyDlB+B,E,kDApDb,WAAYhD,GAAQ,IAAD,8BACjB,cAAMA,IACDiD,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAK3C,kBAAoB,EAAKA,kBAAkB2C,KAAvB,gBAHR,E,qDAMnB,WAAqB,IAAD,OAClBC,KAAKF,eAAe,aAAaG,MAAK,SAAAxB,GACpC,EAAKyB,SAASzB,Q,mEAIlB,WAAqB0B,GAArB,mBAAAC,EAAA,sEAEUC,EAFV,4DAEqEF,EAFrE,kBAEmFG,oCAFnF,SAG2BC,MAAMF,EAAK,CAACG,KAAM,SAH7C,cAGUC,EAHV,gBAIuBA,EAASC,OAJhC,cAIUjC,EAJV,OAKIkC,QAAQC,IAAInC,GALhB,kBAMW,CACLjB,KAAM8B,EAAQb,GACdoC,UAAWrC,EAAaC,KAR9B,kCAWIuB,KAAKE,SAAS,IAXlB,0D,sFAeA,SAAkBC,GAAO,IAAD,OACtBQ,QAAQC,IAAIT,GACZH,KAAKF,eAAeK,GAAMF,MAAK,SAAAxB,GAC7B,EAAKyB,SAASzB,Q,oBAIlB,WACE,OAAKuB,KAAKc,MAI6B,IAAnCC,OAAOC,KAAKhB,KAAKc,OAAOG,QAAgBjB,KAAKc,MAAMI,cAAgBH,OAC9D,uDAIP,yBAAKjE,GAAG,UACN,kBAAC,EAAD,CAAQM,kBAAmB4C,KAAK5C,oBAChC,kBAAC,EAAD,CAAaI,KAAMwC,KAAKc,MAAMtD,QAVzB,4C,GArCK2D,aCjClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.18c1c48c.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(props) {\n  return (\n    <div id=\"header\">\n      <h1>Weather</h1>\n      <input className=\"search-box\"\n             type=\"text\"\n             onKeyPress={\n               (event) => {\n                 if (event.key === \"Enter\") {\n                   props.searchWeatherData(event.target.value);\n                 }\n               }\n             }\n      />\n    </div>\n  )\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Info(props) {\n  return(\n    <div id=\"info\">\n      <div id=\"city\">\n        {props.info.cityName}, {props.info.country}\n      </div>\n      <div id=\"clouds\">\n        {props.info.clouds}\n      </div>\n      <div id=\"temp\">\n        {props.info.temperature.centigrade}°\n      </div>\n      <div id=\"feels\">\n        Feels like: {props.info.feelsLike.centigrade}°\n      </div>\n    </div>\n  )\n}\n\nexport default Info;\n","import React from \"react\";\nimport Info from \"./Info\";\n\nfunction WeatherCard(props) {\n  return (\n    <div id=\"weather-card\">\n      <div id=\"sky\">\n        <img src={`http://openweathermap.org/img/wn/${props.info.cloudsImage}@2x.png`} alt=\"clouds\"/>\n      </div>\n      <Info info={props.info}/>\n    </div>\n  )\n}\n\nexport default WeatherCard;\n","import React, {Component} from 'react';\nimport Header from './Components/Header';\nimport WeatherCard from './Components/WeatherCard';\n\nfunction getDegreesinCandF(kelvin) {\n  return {\n    centigrade: Math.round(kelvin - 273.15),\n    fahrenheit: Math.round((kelvin - 273.15) * 9 / 5 + 32)\n  }\n}\n\nfunction getExtraInfo(data) {\n  return {\n    sunrise: data.sys.sunrise,\n    sunset: data.sys.sunset,\n    humidity: data.main.humidity,\n    pressure: data.main.pressure,\n    visibility: data.visibility,\n    wind: data.wind,\n    min_temp: data.main.temp_min,\n    max_temp: data.main.temp_max\n  }\n}\n\nfunction getInfo(data) {\n  let temp = data.main.temp;\n  let feelsLike = data.main.feels_like;\n  return {\n    cityName: data.name,\n    country: data.sys.country,\n    clouds: data.weather[0].description,\n    cloudsImage: data.weather[0].icon,\n    temperature: getDegreesinCandF(temp),\n    feelsLike: getDegreesinCandF(feelsLike),\n  };\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.getWeatherData = this.getWeatherData.bind(this);\n    this.searchWeatherData = this.searchWeatherData.bind(this);\n  }\n\n  componentDidMount() {\n    this.getWeatherData('Bengaluru').then(data => {\n      this.setState(data);\n    });\n  }\n\n  async getWeatherData(city) {\n    try {\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${process.env.REACT_APP_API_KEY}`;\n      const response = await fetch(url, {mode: 'cors'});\n      const data = await response.json();\n      console.log(data);\n      return {\n        info: getInfo(data),\n        extraInfo: getExtraInfo(data)\n      }\n    } catch (error) {\n      this.setState({});\n    }\n  }\n\n  searchWeatherData(city) {\n    console.log(city);\n    this.getWeatherData(city).then(data => {\n      this.setState(data);\n    })\n  }\n\n  render() {\n    if (!this.state) {\n      return <div>Loading</div>\n    }\n\n    if (Object.keys(this.state).length === 0 && this.state.constructor === Object) {\n      return <div>couldn't find the city</div>\n    }\n\n    return (\n      <div id=\"screen\">\n        <Header searchWeatherData={this.searchWeatherData}/>\n        <WeatherCard info={this.state.info}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}